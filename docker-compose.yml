version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smartorder-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - smartorder-net

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "50051:50051"
    networks:
      - smartorder-net

  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    ports:
      - "8081:8081"
      - "50052:50052"
    networks:
      - smartorder-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  smartorder:
    build:
      context: .
      dockerfile: SmartOrder/Dockerfile
    container_name: smartorder
    ports:
      - "8080:8080"
    depends_on:
      - payment-service
      - inventory-service
      - kafka
    networks:
      - smartorder-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PAYMENT_HOST=payment-service
      - PAYMENT_PORT=50051
      - INVENTORY_HOST=inventory-service
      - INVENTORY_PORT=50052
    volumes:
      - /Users/sametavci/.m2:/root/.m2

  notification-service:
    build: ./notification-service
    container_name: notification-service
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - smartorder-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}

networks:
  smartorder-net:
    driver: bridge
